{"version":3,"file":"component---src-templates-post-js-8f7491e7a9955f928936.js","mappings":"8LA0FA,UAjFaA,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EAC5B,MAAMG,EAAOF,EAAKG,WAAa,CAAC,EAC1BC,EAAeF,EAAKG,eAAgBC,EAAAA,EAAAA,GAASJ,EAAKG,eAAiB,KAGnEE,EAAgBL,EAAKM,gBAAkB,CAAC,EACxCC,EAAiB,GAavB,OAZIF,GACAE,EAAeC,KACXH,EAAcI,SAAW,KACzBJ,EAAcK,QACR,uBAAuBL,EAAcK,QAAQC,QAAQ,KAAM,OAC3D,KACNN,EAAcO,SACR,4BAA4BP,EAAcO,SAASD,QAAQ,MAAO,OAClE,MAKVE,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACC,EAAAA,EAAQ,CAAChB,KAAMA,EAAMC,SAAUA,EAAUgB,KAAK,YAC/CF,EAAAA,cAACG,EAAAA,EAAM,KACHH,EAAAA,cAAA,SAAOE,KAAK,YAAY,GAAGf,EAAKiB,sBAAwB,OAE5DJ,EAAAA,cAACK,EAAAA,GAAM,KACHL,EAAAA,cAAA,OAAKM,UAAU,aACXN,EAAAA,cAAA,WAASM,UAAU,WACdjB,EACGW,EAAAA,cAAA,UAAQM,UAAU,sBACdN,EAAAA,cAACO,EAAAA,EAAW,CAACC,MAAOnB,EAAcoB,IAAKtB,EAAKuB,OAAS,gBAEzD,KACJV,EAAAA,cAAA,WAASM,UAAU,qBACfN,EAAAA,cAAA,MAAIM,UAAU,iBAAiBnB,EAAKuB,OAAS,iBAC7CV,EAAAA,cAAA,WACIM,UAAU,qCACVK,wBAAyB,CAAEC,OAAQzB,EAAK0B,MAAQ,MAGnDrB,GACGQ,EAAAA,cAAA,OAAKM,UAAU,eACXN,EAAAA,cAAA,UAAKR,EAAcsB,MAAQ,aAC3Bd,EAAAA,cAAA,UACKN,EAAeqB,KAAI,CAACC,EAASC,IAC1BD,EACIhB,EAAAA,cAAA,MAAIkB,IAAKD,GACLjB,EAAAA,cAAA,KAAGmB,KAAMH,EAASI,OAAO,SAASC,IAAI,uBACjCL,IAGT,aASrC,C","sources":["webpack://gatsby-starter-ghost/./src/templates/post.js"],"sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport { Layout } from \"../components/common\";\nimport { MetaData } from \"../components/common/meta\";\n\nconst Post = ({ data, location }) => {\n    const post = data.ghostPost || {}; // Asegúrate de que `post` no sea undefined\n    const featureImage = post.feature_image ? getImage(post.feature_image) : null; // Verifica si la imagen existe\n\n    // Agregamos validación para evitar errores si `primaryAuthor` no existe\n    const primaryAuthor = post.primary_author || {}; // Si no hay autor, usa un objeto vacío\n    const authorProfiles = [];\n    if (primaryAuthor) {\n        authorProfiles.push(\n            primaryAuthor.website || null,\n            primaryAuthor.twitter\n                ? `https://twitter.com/${primaryAuthor.twitter.replace(/^@/, ``)}/`\n                : null,\n            primaryAuthor.facebook\n                ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/`\n                : null\n        );\n    }\n\n    return (\n        <>\n            <MetaData data={data} location={location} type=\"article\" />\n            <Helmet>\n                <style type=\"text/css\">{`${post.codeinjection_styles || \"\"}`}</style>\n            </Helmet>\n            <Layout>\n                <div className=\"container\">\n                    <article className=\"content\">\n                        {featureImage ? (\n                            <figure className=\"post-feature-image\">\n                                <GatsbyImage image={featureImage} alt={post.title || \"Post image\"} />\n                            </figure>\n                        ) : null}\n                        <section className=\"post-full-content\">\n                            <h1 className=\"content-title\">{post.title || \"Untitled Post\"}</h1>\n                            <section\n                                className=\"content-body load-external-scripts\"\n                                dangerouslySetInnerHTML={{ __html: post.html || \"\" }}\n                            />\n                            {/* Agregar información del autor */}\n                            {primaryAuthor && (\n                                <div className=\"post-author\">\n                                    <h3>{primaryAuthor.name || \"Anonymous\"}</h3>\n                                    <ul>\n                                        {authorProfiles.map((profile, index) =>\n                                            profile ? (\n                                                <li key={index}>\n                                                    <a href={profile} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                        {profile}\n                                                    </a>\n                                                </li>\n                                            ) : null\n                                        )}\n                                    </ul>\n                                </div>\n                            )}\n                        </section>\n                    </article>\n                </div>\n            </Layout>\n        </>\n    );\n};\n\nPost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string,\n            html: PropTypes.string,\n            feature_image: PropTypes.object,\n            primary_author: PropTypes.shape({\n                name: PropTypes.string,\n                website: PropTypes.string,\n                twitter: PropTypes.string,\n                facebook: PropTypes.string,\n            }),\n        }),\n    }),\n    location: PropTypes.object,\n};\n\nexport default Post;\n\nexport const postQuery = graphql`\n    query ($slug: String!) {\n        ghostPost(slug: { eq: $slug }) {\n            title\n            html\n            feature_image\n            primary_author {\n                name\n                website\n                twitter\n                facebook\n            }\n        }\n    }\n`;\n"],"names":["_ref","data","location","post","ghostPost","featureImage","feature_image","getImage","primaryAuthor","primary_author","authorProfiles","push","website","twitter","replace","facebook","React","MetaData","type","Helmet","codeinjection_styles","Layout","className","GatsbyImage","image","alt","title","dangerouslySetInnerHTML","__html","html","name","map","profile","index","key","href","target","rel"],"sourceRoot":""}